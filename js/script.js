"use strict"
//В першому прикладі відбудеться конкатенація, тобто до рядка «number» буде додано число перетворене у рядок «3» та ще один рядок «3». Результат : number33.
console.log('number'+3+3);
//Так як в цьому випадку тут не має рядка, то операція «+» - це просто додавання, тому ми отримаємо, що до пустоти додаємо три і отримаємо число 3.
console.log(null+3);
//Операція «і» повертає останнє значення true. Число та не пустий рядок - це завжди true, тому операція повертає рядок «qwerty».
console.log(5&&"qwerty");
//Бінарний плюс завжди призводить до числа, операція «+» лівоасоціативна, тому рахуємо зліва, число 40 + число 2, буде 42. Далі додавання з рядком, а отже конкатенація, тому результат рядок «42hillel».
console.log(+'40' + +'2' + "hillel");
//JS завжди все пробує привезти до числа, тому в нас виходить 10-5=5. Далі йде оператор строгої рівності, тип даних однаковий - число, але значення різні, тому результат false.
console.log('10' - 5 === 6);
//JS все приводить до числа, тому у нас виходить 1+0=1.
console.log(true + false);
//Від рядка, який не складається лише з цифр, не можливо відняти число, тому операція повертає NaN.
console.log('4px' - 3);
//В цьому прикладі рядом можна перетворити на число, тому виходить 4-3=1.
console.log('4' - 3);
//Перший операнд - це рядок, тому далі операція «+» буде конкатенацією. Другий операнд це зведення у ступень, 3 в нульовій ступені буде 1. Якщо зʼєднати два рядки «6» та «1», то вийде рядок «61».
console.log('6' + 3 ** 0);
//Рядок «6» буде переведено у число 6, тому результат буде 12/6=2.
console.log(12 / '6');
//Перший операнд - це рядок, тому далі операція «+» буде конкатенацією. 5 не дорівнює 6, результат буде false, який перетвориться у рядок. Тому результат - «10false”.
console.log('10' + (5 === 6));
//Порівняння пустого рядка та null завжди повертає false.
console.log(null == '');
// Спочатку виконуємо дію у дужках, ділимо 9 на 3, отримаємо 3. Далі визволимо 3 у 3 ступінь і отримаємо 27.
console.log(3 ** (9 / 3));
//Операція «!» все перетворює на буллеан, будь-який рядок буде true, тому рядки ʼfalse» та «true” будуть перетворені на значення true. Подвійна операція «!!» від true дасть true. True===True, тому результат True.
console.log(!!'false' == !!'true');
//Спочатку виконуємо операцію “and”, рядок та число завжди true, тому беремо останнє значення true, тобто 1. Далі операція «або», нуль це завжди false, а число 1 - true, беремо перше true, тобто 1, результат = 1.
console.log(0 || '0' && 1);
//Бінарний плюс від null повертає 0, false - це також 0, тому 0==0 повертає true. True - це 1, 1<1 повертає false.
console.log((+null == false) < 1);
//False&&True повертає False, False || True повертає True.
console.log(false && true || true);
//False||True повертає True, False &&True повертає False.
console.log(false && (false || true));
//Бінарний плюс від null повертає 0, false - це також 0, тому 0==0 повертає true, тобто 1. 1 в 5 ступені буде 1, 1<1 повертає False.
console.log((+null == false) < 1 ** 5);